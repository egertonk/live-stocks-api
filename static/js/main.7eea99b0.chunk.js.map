{"version":3,"sources":["components/StocksHeader.js","components/OtherProjects.js","components/StocksFooter.js","components/StocksAPI.js","App.js","reportWebVitals.js","index.js"],"names":["StocksHeader","className","OtherProjects","rel","href","StocksFooter","StocksAPI","useState","Data","setData","error","setError","setIsLoaded","allData","url","headers","Request","useEffect","fetch","method","mode","then","resp","json","style","backgroundColor","message","property","temp","propertyTwo","undefined","ticker","push","class","name","price","volume","previous_close_price","day_open","day_low","day_high","day_change","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eea99b0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction StocksHeader() {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Live Stocks API Data</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default StocksHeader\r\n","import React from 'react'\r\n\r\nfunction OtherProjects() {\r\n    return (\r\n        <div>\r\n            See these other projects:&nbsp;\r\n            <a className=\"project-links\" rel=\"noopener\" href=\"https://egertonk.github.io/react-wise-spender/\" >React-Wise-Spender</a>  \r\n            &nbsp; <a className=\"project-links\" rel=\"noopener\" href=\"https://egertonk.github.io/react-todo-list/\" >React-Todo-List</a>\r\n            &nbsp; <a className=\"project-links\" rel=\"noopener\" href=\"http://mason.gmu.edu/~eduring/IT331_PROJECT/index.html\" >Front End Project</a>\r\n            &nbsp; <a className=\"project-links\" rel=\"noopener\" href=\"http://mason.gmu.edu/~eduring/bangladesh/Home.html\" >Bangladesh Web Project</a>\r\n            &nbsp; <a className=\"project-links\" rel=\"noopener\" href=\"https://egertonk.github.io/react-api-news/\" >react-api-news</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherProjects","import React from 'react'\r\nimport OtherProjects from './OtherProjects'\r\n\r\n\r\nfunction StocksFooter() {\r\n    return (\r\n        <footer className=\"App-footer\">\r\n            App Provided By Egerton...\r\n            <OtherProjects />\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default StocksFooter\r\n","\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport StocksHeader from './StocksHeader';\r\nimport StocksFooter from './StocksFooter';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction StocksAPI() {\r\n  const [Data,setData]=useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const allData = [];\r\n  \r\n  var url = 'https://api.stockdata.org/v1/data/quote?symbols=AAPL,TSLA,MSFT&api_token=zPejacn6XxwRcHAahnN3uhRoZw3mwoCCb5p4SHQf';\r\n\r\n  //var url = 'https://coffee.alexflipnote.dev/random.json';\r\n  var req = new Request(url);\r\n  var headers = {};\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  useEffect(() => {\r\n    fetch(url, {\r\n        method : \"GET\",\r\n        mode: 'cors',\r\n        headers: headers\r\n    })\r\n        .then(resp => resp.json())\r\n        .then(resp => {\r\n          setData(resp)\r\n          setIsLoaded(true);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        })\r\n    }, []) \r\n    \r\n    \r\n    if(error)\r\n    {\r\n      return <>\r\n                <div className='media'> \r\n                <img className=\"align-self-start mr-3\"  style={{backgroundColor: '#02898a' }}/>\r\n                <div className=\"media-body\"> \r\n                  {Data.message}\r\n                </div>\r\n                </div>\r\n              </>;\r\n    }\r\n    else{\r\n      for (const property in Data) {\r\n        const temp = Data[property];\r\n        for (const propertyTwo in temp) {\r\n            if(temp[propertyTwo].ticker !== undefined)\r\n            {\r\n                allData.push(\r\n                    <>\r\n                    <div className=\"shadow-lg p-3 mb-5 bg-white rounded\"> \r\n                        <h3 className=\"mt-0\">{temp[propertyTwo].ticker}</h3>\r\n                        <div class=\"row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Name: \r\n                                    </div>\r\n                                    <div className=\"smallScreens bold-it col\">\r\n                                        {temp[propertyTwo].name}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Current Price: \r\n                                    </div>\r\n                                    <div className=\"smallScreens style-money-one col\">\r\n                                        ${temp[propertyTwo].price}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Volume Traded: \r\n                                    </div>\r\n                                    <div className=\"smallScreens bold-it col\">\r\n                                        {temp[propertyTwo].volume}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Previous Close Price: \r\n                                    </div>\r\n                                    <div className=\"smallScreens style-money-one col\">\r\n                                        ${temp[propertyTwo].previous_close_price}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-sm\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Today's Open: \r\n                                    </div>\r\n                                    <div className=\"smallScreens bold-it col\">\r\n                                        ${temp[propertyTwo].day_open}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Today's Low: \r\n                                    </div>\r\n                                    <div className=\"smallScreens style-money-two col\">\r\n                                        ${temp[propertyTwo].day_low}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Today's High: \r\n                                    </div>\r\n                                    <div className=\"smallScreens col style-money-one\">\r\n                                        ${temp[propertyTwo].day_high}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"smallScreens col\">\r\n                                        Today's Change: \r\n                                    </div>\r\n                                    <div className=\"smallScreens col bold-it\">\r\n                                        ${temp[propertyTwo].day_change}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                  );\r\n            }\r\n        }\r\n      }\r\n    }\r\n    \r\n  return (\r\n    \r\n    <div className=\"container\">\r\n      <StocksHeader />\r\n      {allData}\r\n      <StocksFooter />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StocksAPI","import './App.css';\nimport StocksAPI from './components/StocksAPI';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StocksAPI />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}